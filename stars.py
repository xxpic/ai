import logging
from aiogram import Bot
from aiogram.types import LabeledPrice, InlineKeyboardMarkup, InlineKeyboardButton
from config import STARS_PACKAGES, AUTHOR_USER_ID

logger = logging.getLogger(__name__)

def get_support_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–∞–∫–µ—Ç–∞ Stars
    for package_id, package_data in STARS_PACKAGES.items():
        stars_count = package_data['stars']
        title = package_data['title']
        
        keyboard.inline_keyboard.append([
            InlineKeyboardButton(
                text=f"‚≠ê {title} ({stars_count} Stars)",
                callback_data=f"support:{package_id}"
            )
        ])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    keyboard.inline_keyboard.append([
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="about")
    ])
    
    return keyboard

async def create_stars_invoice(bot: Bot, user_id: int, package_id: str):
    """–°–æ–∑–¥–∞–µ—Ç –∏–Ω–≤–æ–π—Å –¥–ª—è –æ–ø–ª–∞—Ç—ã Stars"""
    
    if package_id not in STARS_PACKAGES:
        logger.error(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–∞–∫–µ—Ç: {package_id}")
        return None
    
    package = STARS_PACKAGES[package_id]
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∏–Ω–≤–æ–π—Å –¥–ª—è Telegram Stars
        invoice_link = await bot.create_invoice_link(
            title=package['title'],
            description=package['description'],
            payload=f"support_{package_id}_{user_id}",
            currency="XTR",  # XTR - –≤–∞–ª—é—Ç–∞ –¥–ª—è Telegram Stars
            prices=[
                LabeledPrice(
                    label=f"{package['stars']} Telegram Stars",
                    amount=package['price']
                )
            ],
            provider_token=""  # –î–ª—è Stars —Ç–æ–∫–µ–Ω –Ω–µ –Ω—É–∂–µ–Ω
        )
        
        return invoice_link
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω–≤–æ–π—Å–∞: {e}")
        return None

def get_payment_keyboard(invoice_link: str, package_id: str):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –æ–ø–ª–∞—Ç—ã"""
    package = STARS_PACKAGES[package_id]
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text=f"‚≠ê –û–ø–ª–∞—Ç–∏—Ç—å {package['stars']} Stars",
                url=invoice_link
            )
        ],
        [
            InlineKeyboardButton(
                text="‚¨ÖÔ∏è –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –ø–∞–∫–µ—Ç",
                callback_data="support"
            )
        ],
        [
            InlineKeyboardButton(
                text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                callback_data="main_menu"
            )
        ]
    ])
    
    return keyboard

def get_support_info_text():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–¥–¥–µ—Ä–∂–∫–µ"""
    text = """üíù **–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ —á–µ—Ä–µ–∑ Telegram Stars**

üåü **–ó–∞—á–µ–º –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –ø—Ä–æ–µ–∫—Ç?**
‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π
‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏ —Ü–µ–Ω –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
‚Ä¢ –†–∞–∑–≤–∏—Ç–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤

‚≠ê **–ß—Ç–æ —Ç–∞–∫–æ–µ Telegram Stars?**
Telegram Stars - –≤—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –≤–∞–ª—é—Ç–∞ Telegram –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Å–æ–∑–¥–∞—Ç–µ–ª–µ–π –∫–æ–Ω—Ç–µ–Ω—Ç–∞. –ó–≤–µ–∑–¥—ã –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –ø—Ä—è–º–æ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –¥–æ–Ω–∞—Ç–æ–≤.

üíé **–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ Stars:**
‚Ä¢ –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏ —á–µ—Ä–µ–∑ Telegram
‚Ä¢ –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã
‚Ä¢ –ù–∏–∑–∫–∏–µ –∫–æ–º–∏—Å—Å–∏–∏
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –æ—Ç Telegram

–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –ø–∞–∫–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏:"""
    
    return text

async def handle_successful_payment(bot: Bot, user_id: int, payload: str, total_amount: int):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞"""
    try:
        # –ü–∞—Ä—Å–∏–º payload
        parts = payload.split("_")
        if len(parts) >= 3 and parts[0] == "support":
            package_id = parts[1]
            payer_id = int(parts[2])
            
            if package_id in STARS_PACKAGES:
                package = STARS_PACKAGES[package_id]
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                thank_you_text = f"""üôè **–û–≥—Ä–æ–º–Ω–æ–µ —Å–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É!**

‚úÖ **–ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω:**
‚Ä¢ –ü–∞–∫–µ—Ç: {package['title']}
‚Ä¢ –°—É–º–º–∞: {package['stars']} Stars
‚Ä¢ –°—Ç–∞—Ç—É—Å: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω

üöÄ **–ß—Ç–æ –¥–∞–ª—å—à–µ:**
‚Ä¢ –í–∞—à–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ–º–æ–∂–µ—Ç —Ä–∞–∑–≤–∏–≤–∞—Ç—å –ø—Ä–æ–µ–∫—Ç
‚Ä¢ –í –±–ª–∏–∂–∞–π—à–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö –ø–æ—è–≤—è—Ç—Å—è –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
‚Ä¢ –°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏ –≤ –±–æ—Ç–µ

üíù –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç–µ –¥–µ–ª–∞—Ç—å –±–æ—Ç –ª—É—á—à–µ!"""

                await bot.send_message(
                    chat_id=payer_id,
                    text=thank_you_text,
                    parse_mode="Markdown"
                )
                
                # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–≤—Ç–æ—Ä–∞ –æ –ø–æ–¥–¥–µ—Ä–∂–∫–µ
                if AUTHOR_USER_ID and AUTHOR_USER_ID != payer_id:
                    author_notification = f"""üíù **–ù–æ–≤–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞!**

üë§ **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {payer_id}
üí∞ **–ü–∞–∫–µ—Ç:** {package['title']}
‚≠ê **–°—É–º–º–∞:** {package['stars']} Stars

–í—Ä–µ–º—è: {total_amount}"""

                    try:
                        await bot.send_message(
                            chat_id=AUTHOR_USER_ID,
                            text=author_notification,
                            parse_mode="Markdown"
                        )
                    except Exception as e:
                        logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å –∞–≤—Ç–æ—Ä–∞: {e}")
                
                logger.info(f"–£—Å–ø–µ—à–Ω—ã–π –ø–ª–∞—Ç–µ–∂: {package_id} –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {payer_id}")
                return True
    
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–∞: {e}")
    
    return False

def get_stars_statistics_text(payments_count: int = 0, total_stars: int = 0):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ Stars –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏"""
    text = f"""üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞**

üí´ **–í—Å–µ–≥–æ –ø–æ–ª—É—á–µ–Ω–æ Stars:** {total_stars}
ü§ù **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–¥–µ—Ä–∂–∞–≤—à–∏—Ö:** {payments_count}
üíù **–°—Ä–µ–¥–Ω–∏–π –¥–æ–Ω–∞—Ç:** {total_stars // payments_count if payments_count > 0 else 0} Stars

üìà **–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞–∫–µ—Ç—ã:**"""
    
    for package_id, package_data in STARS_PACKAGES.items():
        text += f"\n‚Ä¢ {package_data['title']}: {package_data['stars']} ‚≠ê"
    
    text += f"""

üéØ **–¶–µ–ª–∏ –ø—Ä–æ–µ–∫—Ç–∞:**
‚Ä¢ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –ò–ò
‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
‚Ä¢ –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
‚Ä¢ API –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤

–°–ø–∞—Å–∏–±–æ –≤—Å–µ–º –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É! üôè"""
    
    return text